//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.01.11 at 01:02:19 PM IST 
//


package com.sabre.webservices.pnrbuilder.v1_19;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for TravelSectorType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="TravelSectorType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Air"/&gt;
 *     &lt;enumeration value="Car"/&gt;
 *     &lt;enumeration value="Hotel"/&gt;
 *     &lt;enumeration value="Insurance"/&gt;
 *     &lt;enumeration value="Golf"/&gt;
 *     &lt;enumeration value="Tour"/&gt;
 *     &lt;enumeration value="Rail"/&gt;
 *     &lt;enumeration value="Cruise"/&gt;
 *     &lt;enumeration value="Excursion"/&gt;
 *     &lt;enumeration value="Ferry"/&gt;
 *     &lt;enumeration value="GroundTransport"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "TravelSectorType")
@XmlEnum
public enum TravelSectorType {

    @XmlEnumValue("Air")
    AIR("Air"),
    @XmlEnumValue("Car")
    CAR("Car"),
    @XmlEnumValue("Hotel")
    HOTEL("Hotel"),
    @XmlEnumValue("Insurance")
    INSURANCE("Insurance"),
    @XmlEnumValue("Golf")
    GOLF("Golf"),
    @XmlEnumValue("Tour")
    TOUR("Tour"),
    @XmlEnumValue("Rail")
    RAIL("Rail"),
    @XmlEnumValue("Cruise")
    CRUISE("Cruise"),
    @XmlEnumValue("Excursion")
    EXCURSION("Excursion"),
    @XmlEnumValue("Ferry")
    FERRY("Ferry"),
    @XmlEnumValue("GroundTransport")
    GROUND_TRANSPORT("GroundTransport");
    private final String value;

    TravelSectorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TravelSectorType fromValue(String v) {
        for (TravelSectorType c: TravelSectorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
