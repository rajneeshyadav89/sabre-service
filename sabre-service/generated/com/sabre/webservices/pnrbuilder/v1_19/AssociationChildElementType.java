//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.01.11 at 01:02:19 PM IST 
//


package com.sabre.webservices.pnrbuilder.v1_19;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AssociationChildElementType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AssociationChildElementType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Remark"/&gt;
 *     &lt;enumeration value="PhoneNumber"/&gt;
 *     &lt;enumeration value="Ticket"/&gt;
 *     &lt;enumeration value="AccountingLine"/&gt;
 *     &lt;enumeration value="FOP"/&gt;
 *     &lt;enumeration value="FopUsageType"/&gt;
 *     &lt;enumeration value="FopTripType"/&gt;
 *     &lt;enumeration value="AccountingField"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "AssociationChildElementType")
@XmlEnum
public enum AssociationChildElementType {

    @XmlEnumValue("Remark")
    REMARK("Remark"),
    @XmlEnumValue("PhoneNumber")
    PHONE_NUMBER("PhoneNumber"),
    @XmlEnumValue("Ticket")
    TICKET("Ticket"),
    @XmlEnumValue("AccountingLine")
    ACCOUNTING_LINE("AccountingLine"),
    FOP("FOP"),
    @XmlEnumValue("FopUsageType")
    FOP_USAGE_TYPE("FopUsageType"),
    @XmlEnumValue("FopTripType")
    FOP_TRIP_TYPE("FopTripType"),
    @XmlEnumValue("AccountingField")
    ACCOUNTING_FIELD("AccountingField");
    private final String value;

    AssociationChildElementType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AssociationChildElementType fromValue(String v) {
        for (AssociationChildElementType c: AssociationChildElementType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
