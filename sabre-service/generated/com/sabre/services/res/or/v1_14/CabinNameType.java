//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.01.11 at 01:02:19 PM IST 
//


package com.sabre.services.res.or.v1_14;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CabinNameType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CabinNameType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="PremiumFirst"/&gt;
 *     &lt;enumeration value="First"/&gt;
 *     &lt;enumeration value="PremiumBusiness"/&gt;
 *     &lt;enumeration value="Business"/&gt;
 *     &lt;enumeration value="PremiumEconomy"/&gt;
 *     &lt;enumeration value="Economy"/&gt;
 *     &lt;enumeration value="Y"/&gt;
 *     &lt;enumeration value="S"/&gt;
 *     &lt;enumeration value="C"/&gt;
 *     &lt;enumeration value="J"/&gt;
 *     &lt;enumeration value="F"/&gt;
 *     &lt;enumeration value="P"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "CabinNameType")
@XmlEnum
public enum CabinNameType {

    @XmlEnumValue("PremiumFirst")
    PREMIUM_FIRST("PremiumFirst"),
    @XmlEnumValue("First")
    FIRST("First"),
    @XmlEnumValue("PremiumBusiness")
    PREMIUM_BUSINESS("PremiumBusiness"),
    @XmlEnumValue("Business")
    BUSINESS("Business"),
    @XmlEnumValue("PremiumEconomy")
    PREMIUM_ECONOMY("PremiumEconomy"),
    @XmlEnumValue("Economy")
    ECONOMY("Economy"),
    Y("Y"),
    S("S"),
    C("C"),
    J("J"),
    F("F"),
    P("P");
    private final String value;

    CabinNameType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CabinNameType fromValue(String v) {
        for (CabinNameType c: CabinNameType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
